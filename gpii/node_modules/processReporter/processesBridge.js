/*!
GPII Process Reporter processes bridge -- gpii.processes.

Copyright 2014-2016 Inclusive Design Research Centre, OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

/*global require */

(function () {
    "use strict";

    var fluid = require("universal");
    var ref = require("ref");

    var gpii = fluid.registerNamespace("gpii");
    var windows = fluid.registerNamespace("gpii.windows");
    var windowsUtils = require("../WindowsUtilities/WindowsUtilities.js");
    var c = windows.API_constants;

    gpii.processes = fluid.registerNamespace("gpii.processes");

    fluid.defaults("gpii.processes.native", {
        gradeNames: ["fluid.component"],
        invokers: {
            getProcessList: {
                funcName: "gpii.processes.native.getProcessList",
                args: []
            }
        }
    });

    // Return a list of processes -- a snapshot of the current processes.
    // Note: Should the bulk of this go into WindowUtilities?
    gpii.processes["native"].getProcessList = function () {
        var processes = [];
//        debugger;
        var windowsProcesses = windows.processesSnapshot();
        fluid.each(windowsProcesses, function (aProc, index) {
            var procInfo = {};
//            debugger;
            procInfo.command = aProc.execFile;
            procInfo.pid = aProc.pid;
//          proceInfo.argv = ???;
            procInfo.state = "Running";  // If it's in the list. But there must be a better way.
//            procInfo.fullPath = aProc.modules[0].execPath;  // Do we need to copy, or is a reference good enough?
            processes.push(procInfo);
            // Need to get more info about the process.            

        });
        return processes;
    };
    
//    debugger;
    var procList = gpii.processes["native"].getProcessList();
//    debugger;
    console.log ("");
    console.log (JSON.stringify(procList));
    
}());
