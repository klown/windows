/*!
GPII Process Reporter processes bridge -- gpii.processes.

Copyright 2017 Inclusive Design Research Centre, OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

using gpii.windows.processes;
using System;
using System.Threading.Tasks;
using System.Collections;
using System.Collections.Generic;

namespace gpii.windows.processes.tests
{
    public class GetProcessesTests
    {
        public async Task<object> Invoke(dynamic input)
        {
            var runAssertion = (Func<object, Task<object>>)input.assert;
            ArrayList testResults = new ArrayList();
            
            var assertionArgs = new {
                testName = "Checking equality",
                message = "Expected == actual",
                expected = 5,
                actual = 4,
                assert = "assertEquals"
            };
            testResults.Add(assertionArgs);
            assertionArgs = new {
                testName = "Checking equality",
                message = "Expected == actual",
                expected = 5,
                actual = 5,
                assert = "assertEquals"
            };
            testResults.Add(assertionArgs);
            Console.WriteLine("C# before runAssertion()");
            var result = (int)await runAssertion(testResults.ToArray());
            Console.WriteLine("C# runAssertion() result is " + result);
            return result;
        }
    }
}
